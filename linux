####################################################################################################
### /////////////////////////////// LINUX QUICK REFERENCE SHEET \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\  ###
####################################################################################################
----------------------------------------------------------------------------------------------------
###
### LAST UPDATED: 20170919
### CREATED BY: h8rt3rmin8r ( 161803398@email.tg )
###
### Each section of this document is clearly marked. All major titles begin with "###" and are
### in all-caps. All minor titles begin with "#" and are in all-caps. All terminal commands are 
### written with no indent and no preceding symbols.
###
----------------------------------------------------------------------------------------------------
####################################################################################################
### TABLE OF CONTENTS
####################################################################################################
----------------------------------------------------------------------------------------------------
### 
### LINUX NAVIGATION & ESSENTIALS 
### HARDWARE AND PROCESS MANAGEMENT
### KEY CODING AND DEV TOOLS
### EXTENDED GLOBAL REGEX PRINT: "grep"
### NETWORKING COMMANDS & TOOLS
### BUILDING & RUNNING SHELL SCRIPTS
### PROGRAM CROSS-PLATFORM SOFTWARE WITH MONO
### LIST ALL ACTIVE TOKENS ON BITTREX EXCHANGE
### WORKING WITH THE WAVES BLOCKCHAIN
### PERMISSIONS AND USER ACCESS
### WORKING WITH PPAs
### COMMANDS FOR DELETING FILES
### BUILD MIND MAPS WITH GRAPHVIZ-DEV
### 
----------------------------------------------------------------------------------------------------
####################################################################################################
### LINUX NAVIGATION & ESSENTIALS 
####################################################################################################
----------------------------------------------------------------------------------------------------
# FIND THE LOCATION OF A FILE NAMED "MyFile"
whereis MyFile
----------------------------------------------------------------------------------------------------
# FIND OUT WHERE YOU ARE
# Print the name of the current/working directory
pwd
----------------------------------------------------------------------------------------------------
# MAKE A NEW FOLDER NAMED "MyNewFolder"
# The following command will create a new folder in your current directory:
mkdir MyNewFolder
----------------------------------------------------------------------------------------------------
# COPY FILES IN THE TERMINAL 
# (A LIVE EXAMPLE)
sudo cp -avr /home/h8rt3rmin8r/SomeEpicFilev2.0.rar /var/www/html
# The output printed in the terminal was as follows: 
'/home/h8rt3rmin8r/SomeEpicFilev2.0.rar' -> '/var/www/html/SomeEpicFilev2.0.rar'
# Now view the contents of the current directory:
ls
# The output printed in the terminal was as follows:
SomeEpicFilev2.0.rar  index.html
----------------------------------------------------------------------------------------------------
# SYNCRONIZE ONE DIRECTORY WITH ANOTHER
# NOTE: This command works across SSH and remote connections as well as local files/folders
rsync
----------------------------------------------------------------------------------------------------
# EXTRACTING .rar ARCHIVES
# Unpack a .rar archive with the "unrar" tool. First install it with the following command:
sudo apt-get install unrar-free
# Now unpack the archive (Example archive named: "ARCHIVE.rar") with this command:
unrar e ARCHIVE.rar
----------------------------------------------------------------------------------------------------
# EXTRACTING .xz AND .tgz ARCHIVES
# Unpack a .xz archive with the tar command. First make sure you have the necessary utility
# package installed by running the following command: 
sudo apt-get install xz-utils
# Now complete the job of unpacking the archive ("ARCHIVE.tar.xz") as follows:
tar -xf ARCHIVE.tar.xz
# The -xf flag works with a large number of other compression types as well. So basically, if in
# doubt, just use the -xf flag with tar.
----------------------------------------------------------------------------------------------------
# EXTRACTING .gzip AND .bzip2 ARCHIVES
# Unpack the .gzip and .bzip2 archive types with the tar command:
tar -xfz ARCHIVE.gzip
tar -xfz ARCHIVE.bzip2
----------------------------------------------------------------------------------------------------
# PRINT SYSTEM FILE TREE AS HTML
sudo apt-get update
sudo apt-get install tree
tree -H ./ > result.html
# If Firefox is installed on your system, you can then view the "result.html" tree with the
# following command:
firefox ./result.html
----------------------------------------------------------------------------------------------------
# ENCRYPT/DECRYPT FILES AND MESSAGES
gpg
----------------------------------------------------------------------------------------------------
# REALPATH
# Find the real file path to a specified file or folder
# Install with the following command:
sudo apt-get install realpath
# Proper syntax for realpath:
realpath TARGETFILE.txt
# Example output in the terminal after you run the command above
/var/www/public_files/TARGETFILE.txt
----------------------------------------------------------------------------------------------------
# COUNT THE LINES, WORDS, AND CHARACTERS CONTAINED IN A FILE
# This simple program is excellent for comparing versions of files, among other things.
# To search a text document named "awesome.txt" with this tool, run the following command:
wc awesome.txt
# The output will include three number sets which correspond to the following:
# [# of new lines] [# of words] [# of characters]
# To learn more about this tool, read the documentation at the following location: 
http://manpages.ubuntu.com/manpages/trusty/man1/wc.1.html
----------------------------------------------------------------------------------------------------
####################################################################################################
### HARDWARE AND PROCESS MANAGEMENT
####################################################################################################
----------------------------------------------------------------------------------------------------
# INXI 
# The full system component explorer tool
# Install inxi with the following command
sudo apt-get install inxi
# Run inxi with the following command
inxi
----------------------------------------------------------------------------------------------------
# LSHW
# List all hardware installed on your system
# NOTE: You need to run this command with "sudo" permissions
sudo lshw
----------------------------------------------------------------------------------------------------
# LIVE TABLE OF ALL RUNNING PROCESSES (v.1)
watch -n 1 'ps -e -o pid,uname,cmd,pmem,pcpu --sort=-pmem,-pcpu | head -15'
# Table is constant and sorts processes by system load via the 'ps' command
# coupled with the 'watch' command. By default this watches the top 15 processes.
# To watch the top 25 system-heavy processes, use the following:
watch -n 1 'ps -e -o pid,uname,cmd,pmem,pcpu --sort=-pmem,-pcpu | head -25'
----------------------------------------------------------------------------------------------------
# LIVE TABLE OF ALL RUNNING PROCESSES (v.2)
# Simply run the following command: 
top
# While the output is live and continuous, it tends to not be as formatted and can sometimes
# print in an unstable or unusual manner.
----------------------------------------------------------------------------------------------------
# LIVE TABLE OF ALL RUNNING PROCESSES (v.3)
# The more graphical version of "top" is called "htop". 
# Install htop with the following command:
sudo apt install htop
# Then run htop with the command:
htop
# You can kill/end processes graphically using htop! Simply refer to the options displayed
# at the bottom of the terminal screen 
----------------------------------------------------------------------------------------------------
####################################################################################################
### KEY CODING AND DEV TOOLS 
####################################################################################################
----------------------------------------------------------------------------------------------------
# RUN LYNX, THE TEXT-ONLY WEB BROWSER IN TERMINAL
# (AFTER INSTALL)
lynx
# Dump all links from a single webpage with Lynx
lynx -listonly -dump url.example.com
# Output the result of the link list dump into a text file in your current directory
lynx -listonly -dump url.example.com | nano url.example.com.txt
----------------------------------------------------------------------------------------------------
# RUN MICROSOFT VISUAL STUDIO CODE
# (AFTER INSTALL)
code
----------------------------------------------------------------------------------------------------
# GOOGLE CLOUD SDK
# Launch Google Cloud SDK and initialize a new project
gcloud init
----------------------------------------------------------------------------------------------------
####################################################################################################
### EXTENDED GLOBAL REGEX PRINT: "grep"
####################################################################################################
----------------------------------------------------------------------------------------------------
# ABOUT GREP
# egrep is an acronym for "Extended Global Regular Expressions Print". 
# It is a program which scans a specified file line by line, returning lines that contain a 
# pattern matching a given regular expression.
----------------------------------------------------------------------------------------------------
# STANDARD egrep COMMAND SYNTAX
egrep <flags> '<regular expression>' <filename>
# The egrep differs from theoretical regex in that it processes strings by line where 
# theoretical regex processes a string as the total target contents
# The symbol pair for word boundaries are \< and \> which respectively denote the 
# beginning and ending of a word.
# To specify a set or range of characters use braces. 
[a9A05]
# To negate the set, use the hat symbol ^ as the first character.
[^a9A05]
# The set of all lowercase letters would be input as:
[a-z]
# To learn more, visit the following site:
http://www.cs.columbia.edu/~tal/3261/fall07/handout/egrep_mini-tutorial.htm
----------------------------------------------------------------------------------------------------
# Example-1
# Match all lines in searchfile.txt which start with a non-empty bitstring, followed 
# by a space, followed by a non-empty alphabetic word which ends the line.
egrep '^(0|1)+ [a-zA-Z]+$' searchfile.txt
# Example-2
# Count the number of lines in lots_o_bits which either start with 1 or end with 01.
egrep -c '^1|01$' lots_o_bits
# Example-3
# Count the number of lines with at least eleven 1's.
egrep -c '10*10*10*10*10*10*10*10*10*10*1' lots_o_bits
# Example-4
# List all the lines in myletter.txt containing the word the insensitive of case.
egrep -i '\<the\>' myletter.txt
----------------------------------------------------------------------------------------------------
####################################################################################################
### NETWORKING COMMANDS & TOOLS
####################################################################################################
----------------------------------------------------------------------------------------------------
# CHECK YOUR COMPUTER'S PUBLIC IP ADDRESS
# Find out your current public IP address by using curl on the Google domain tool
# for checking your IP address. Use the following command:
curl https://domains.google.com/checkip && echo ' '
# Create a shortcut for this process:
alias checkip='curl https://domains.google.com/checkip && echo '
# After creating this shortcut, you can check your system IP address with the following:
checkip
----------------------------------------------------------------------------------------------------
# NETSTAT
# Get a general overview of the network status for your system
netstat
# List all active ports and connections (external)
netstat -tunlp
# List all active ports and connections (internal & external)
netstat -pln
----------------------------------------------------------------------------------------------------
# PULL CONTENT FROM THE INTERNET WITH "WGET"
# Use the wget tool to copy, download, or mirror entire websites. 
# Download site with links not adjusted for static use, which means, all internal hyperlinks on 
# the site will point to their original locations online.
wget -m https://google.com
# Download the site with links adjusted to reference the other files downloaded, allowing for easy
# offline and local viewing of the site:
wget -mk https://google.com
# To avoid flagging your IP address on the servers of the site that you are scraping, add a 
# "wait time" in between the requests being sent with the "-w" flag like this:
wget -mk -w 20 https://google.com/
# Note that the number ("20") in the example above is the number of seconds to wait. This can be
# adjusted to minutes by appending the suffix of "m" for minutes, "h" for hours, or "d" for days.
----------------------------------------------------------------------------------------------------
# ARP-SCAN
# Full network analysis tool to see what IPs are connected to the local network
# Install with the following
sudo apt-get install arp-scan
# Run a scan on the local network with the following command
sudo arp-scan --interface=eth0 --localnet
# To discover which interface you are using to interact with the local network
# run the following command
ifconfig
# Learn more about the arp-scan tool at the following address: 
http://manpages.ubuntu.com/manpages/zesty/en/man1/arp-scan.1.html
----------------------------------------------------------------------------------------------------
# LSOF 
# List Process IDs with corresponding port numbers and what external IP addresses are
# connected to them
lsof -i -P
----------------------------------------------------------------------------------------------------
# NETWORK MAPPING UTILITY
# (AFTER INSTALL)
nmap
# Scan the open ports and status of a specific IP address (this example uses the IP address
# of 192.168.1.50 as an example) with the following command: 
nmap 192.168.1.50
----------------------------------------------------------------------------------------------------
# DISPLAY THE LOCAL GATEWAY ADDRESS
ip r
# Additionally, you can use the following command in netstat:
netstat -r -n
----------------------------------------------------------------------------------------------------
# DISPLAY THE LOCAL DNS INFORMATION
cat /etc/resolv.conf
----------------------------------------------------------------------------------------------------
# DISPLAY THE KERNEL IP ROUTING TABLE
route
# View the same table with IP addresses instead of gateway names with
route -n
----------------------------------------------------------------------------------------------------
####################################################################################################
### BUILDING & RUNNING SHELL SCRIPTS
####################################################################################################
----------------------------------------------------------------------------------------------------
# RUN .sh SCRIPT IN THE TERMINAL (V1)
# Once you are in the correct current folder you can run the script like this:
./script1.sh
# or you can run and redirect the output to a file:
./script1.sh > out.txt
# or you can filter the output for keywords (e.g. "apples") an then redirect to a file:
./script1.sh | grep apples > ./only-apples
# There are thousands of things you can to to that file just by typing a few commands.
# Another one, you can download a file from the Internet with one simple command:
wget www.google.com/images/logos/ps_logo2.png
# And then open the file like this:
shotwell ps_logo2.png
----------------------------------------------------------------------------------------------------
# RUN .sh SCRIPT IN THE TERMINAL (V2)
# Give execute permission to your script:
chmod +x /path/to/yourscript.sh
# And to run your script:
/path/to/yourscript.sh
# Since . refers to the current directory: if yourscript.sh is in the current 
# directory, you can simplify this to:
./yourscript.sh
----------------------------------------------------------------------------------------------------
####################################################################################################
### PROGRAM CROSS-PLATFORM SOFTWARE WITH MONO
####################################################################################################
----------------------------------------------------------------------------------------------------
# Add Mono development packages to Ubuntu
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 
3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
echo "deb http://download.mono-project.com/repo/ubuntu xenial main" | 
sudo tee /etc/apt/sources.list.d/mono-official.list
sudo apt-get update
sudo apt-get install mono-devel
# Install the MonoDevelop IDE
sudo apt-get update
sudo apt-get install monodevelop
# Use the Mono IDE 'MonoDevelop"
monodevelop
# Create your first ASP.NET program
# Read the short tutorial here: 
http://www.monodevelop.com/documentation/creating-aspnet-projects/
----------------------------------------------------------------------------------------------------
####################################################################################################
### LIST ALL ACTIVE TOKENS ON BITTREX EXCHANGE
####################################################################################################
----------------------------------------------------------------------------------------------------
# First make the alias "shortcut" phrase in your terminal:
alias json-tool='python -m json.tool'
# Now pull all currency pairs from the internet and write them into a text file like this:
curl https://bittrex.com/api/v1.1/public/getcurrencies | json-tool | nano bittrex-getcurrencies.txt
----------------------------------------------------------------------------------------------------
####################################################################################################
### WORKING WITH THE WAVES BLOCKCHAIN
####################################################################################################
----------------------------------------------------------------------------------------------------
# WAVES PLATFORM (LITE CLIENT AND FULL NODE)
# Systemd users can start the node with 
sudo systemctl start waves.service 
# (waves-testnet for testnet)
# Enable autoload on start with 
sudo systemctl enable waves.service
# With the systemd Waves node, view live logs with the following command 
journalctl -u waves.service -f
----------------------------------------------------------------------------------------------------
####################################################################################################
### PERMISSIONS AND USER ACCESS 
####################################################################################################
----------------------------------------------------------------------------------------------------
# ADD A NEW USER
sudo adduser username1 username1 username3
----------------------------------------------------------------------------------------------------
# DISCOVER WHAT YOUR USERNAME IS
whoami
----------------------------------------------------------------------------------------------------
# DISCOVER WHAT USER GROUPS EXIST
groups
----------------------------------------------------------------------------------------------------
# DISCOVER USER (bob)'s GROUP MEMBERSHIPS
groups bob
----------------------------------------------------------------------------------------------------
# FIND OWNER AND GROUP OF A DIRECTORY
sudo ls -l /path/to/file
# such that the third column of the output is the owner (user) and the fourth column 
# of the output is the group
----------------------------------------------------------------------------------------------------
# GIVE USER OWNERSHIP OF A DIRECTORY
sudo chown -R username directory
----------------------------------------------------------------------------------------------------
# GIVE FULL READ/WRITE PERMISSIONS
sudo chmod -R u+rX directory
----------------------------------------------------------------------------------------------------
# MAKE A FILE ("MyScript.File") EXECUTABLE
sudo chmod +x MyScript.File
----------------------------------------------------------------------------------------------------
# VIEW ALL USER ACCOUNTS ON THE SYSTEM
compgen -u
# The following command will also perform this function but is said by some to be more thorough
sudo getent passwd
----------------------------------------------------------------------------------------------------
# VIEW ALL USER-GROUPS ON THE SYSTEM
compgen -g
# Also the following:
sudo getent group
----------------------------------------------------------------------------------------------------
####################################################################################################
### WORKING WITH PPAs 
####################################################################################################
----------------------------------------------------------------------------------------------------
# ADD A NEW PPA
sudo add-apt-repository ppa:PPA_NAME/ppa
----------------------------------------------------------------------------------------------------
# LIST ALL PPAs ADDED TO YOUR SYSTEM
sudo ls /etc/apt/sources.list.d
----------------------------------------------------------------------------------------------------
# REMOVE PPA FROM UPDATE SOURCES (V.1)
# NOTE: Does not remove any software
sudo add-apt-repository --remove ppa:PPA_NAME/ppa
----------------------------------------------------------------------------------------------------
# REMOVE PPA FROM UPDATE SOURCES (V.2)
# NOTE: Does not remove any software
sudo rm -i /etc/apt/sources.list.d/PPA_NAME.list
----------------------------------------------------------------------------------------------------
# REMOVE PPA FROM SOURCES AND UNINSTALL SOFTWARE
# Install the ppa-purge tool
sudo apt-get install ppa-purge
# Use the ppa-purge tool with this command
sudo ppa-purge ppa-url
# NOTE: The URL of the PPA you wish to purge can be found in your sources list
----------------------------------------------------------------------------------------------------
####################################################################################################
### COMMANDS FOR DELETING FILES 
####################################################################################################
----------------------------------------------------------------------------------------------------
# THE TERMINAL COMMAND FOR DELETING FILES 
rm 
# The general format of this command is 
rm [-f|i|I|q|R|r|v] [file]
# rm removes a file if you specify a correct path for it 
# Sometimes you may not have the write permissions for a file, in that case it asks 
# you for confirmation. Type yes if you want to delete it.
----------------------------------------------------------------------------------------------------
# OPTIONS FOR rm
-f
# Deletes read-only files immediately without any confirmation.
# If both -f and -i are used then the one which appears last in the terminal is used by rm.
-i
# Prompts for confirmation before deleting every file before entering 
# a sub-directory if used with -R or -r. If both -f and -i are used then the one which
# appears last in the terminal is used by rm.
-q
# Suppresses all the warning messages however error messages are still displayed. 
# However the exit status is modified in case of any errors.
-R
# Delete recursively. It is used to delete the directory tree starting at the directory 
# specified i.e. it deletes the specified directory along with its sub-directory and files.
-r
# The same as -R.
-v
# Displays the file names on the output as they are being processed.
-I
# Prompts every time when an attempt is made to delete for than 3 files at a time or while
# removing recursively. 
----------------------------------------------------------------------------------------------------
# PRECAUTIONS
# Never type the following command into a terminal:
sudo rm -R / 
# or 
sudo rm -r / 
# as it deletes all the data in the root directory and will delete the 
# data of all the mounted volumes until you want to wipe of everything from your system.
# Another command to avoid using is:
sudo rm -f /*
----------------------------------------------------------------------------------------------------
# ADDITIONAL NOTES
# It is possible to recover files deleted through rm
# If you want to permanently delete a file use the command:
shred
----------------------------------------------------------------------------------------------------
####################################################################################################
### BUILD MIND MAPS WITH GRAPHVIZ-DEV 
####################################################################################################
----------------------------------------------------------------------------------------------------
# BASIC INFORMATION
# Project Website
http://www.graphviz.org/
# Live web-version
http://www.webgraphviz.com/
# Launchpad Profile
https://launchpad.net/~gviz-adm/+archive/ubuntu/graphviz-dev
----------------------------------------------------------------------------------------------------
# INSTALLING GRAPHVIZ
# NOTE: Do not use the instructions located on the Graphviz website for installing the program
# onto an Ubuntu system. The instructions are outdated and have many errors. Instead, use the 
# official Ubuntu implementation of graphviz by installing with the following command:
sudo apt-get install graphviz-dev
# Program files are automatically installed into the following locations on your system:
/usr/lib/graphviz 
/usr/include/graphviz
----------------------------------------------------------------------------------------------------
# LEARN TO DRAW FOR GRAPHVIZ
# Graphviz (and the xdot tool below) read/write files called "dot" files. 
# Here is the official guide to creating and working with dot files:
http://www.graphviz.org/Documentation/dotguide.pdf
----------------------------------------------------------------------------------------------------
# ADDITIONAL FEATURES IN THE xdot TOOL
# You can also add the additional graphical features available in the xdot tool
# xdot can read and explore files created by graphviz. Get xdot here:
https://apps.ubuntu.com/cat/applications/natty/xdot/
----------------------------------------------------------------------------------------------------
####################################################################################################
----------------------------------------------------------------------------------------------------

###############################
### "think outside the box" ###
###   ($) ¯\_(ツ)_/¯ (฿)    ###
###############################

----------------------------------------------------------------------------------------------------
